pipeline {
    agent any

    environment {
        PYTHON_VENV = 'venv'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/simon21728/alx-backend-python.git'
            }
        }

        stage('Setup Python') {
            steps {
                sh 'python3 -m vpipeline {
    agent {
        docker {
            image 'python:3.10'
            args '-u root:root' // if you need permissions to install packages
        }
    }

    stages {
        stage('Checkout') {
            steps {
                git(
                    url: 'https://github.com/<your-username>/alx-backend-python.git',
                    branch: 'main',
                    credentialsId: 'github-creds'
                )
            }
        }

        stage('Install dependencies') {
            steps {
                sh '''
                pip install --upgrade pip
                pip install -r messaging_app/requirements.txt
                '''
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                pytest messaging_app/tests --junitxml=report.xml
                '''
            }
        }

        stage('Publish Report') {
            steps {
                junit 'report.xml'
            }
        }
    }
}
env $PYTHON_VENV'
                sh './$PYTHON_VENV/bin/pip install --upgrade pip'
                sh './$PYTHON_VENV/bin/pip install -r requirements.txt'
            }
        }

        stage('Run Tests') {
            steps {
                sh './$PYTHON_VENV/bin/pytest messaging_app/tests --junitxml=report.xml || true'
            }
        }

        stage('Publish Report') {
            steps {
                junit 'report.xml'
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: 'report.xml', allowEmptyArchive: true
        }
    }
}
